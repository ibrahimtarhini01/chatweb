[{"C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\index.js":"1","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\reportWebVitals.js":"2","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\App.js":"3","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\auth\\Register.js":"4","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\auth\\Account.js":"5","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\auth\\SignIn.js":"6","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\layout\\Container.js":"7","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\layout\\Navbar.js":"8","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\store.js":"9","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\reducers\\index.js":"10","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\reducers\\auth.js":"11","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\actions\\types.js":"12","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\reducers\\alerts.js":"13","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\actions\\auth.js":"14","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\actions\\alerts.js":"15","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\utils\\api.js":"16","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\layout\\Alert.js":"17","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\auth\\Confirm.js":"18","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\auth\\Reset.js":"19","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\auth\\ResetPassword.js":"20","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\layout\\Auth.js":"21","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\dashboard\\Dashboard.js":"22","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\layout\\Loading.js":"23","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\layout\\Avatar.js":"24","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\dashboard\\SideBar\\DashboardSideBar.js":"25","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\dashboard\\SideBar\\SideBarNav.js":"26","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\dashboard\\Profile\\UserProfile.js":"27","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\dashboard\\SideBar\\UserRooms.js":"28","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\dashboard\\SideBar\\RoomItem.js":"29","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\dashboard\\Chat\\ChatRoom.js":"30","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\dashboard\\Chat\\ChatRoomHeader.js":"31","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\dashboard\\Chat\\ChatRoomFooter.js":"32","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\dashboard\\Chat\\ChatRoomMessages.js":"33","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\dashboard\\Chat\\ChatRoomMessage.js":"34","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\reducers\\chat.js":"35","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\actions\\chat.js":"36","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\layout\\Modal.js":"37","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\dashboard\\SideBar\\AddRoom.js":"38","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\reducers\\room.js":"39","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\actions\\room.js":"40"},{"size":316,"mtime":1609073279705,"results":"41","hashOfConfig":"42"},{"size":362,"mtime":499162500000,"results":"43","hashOfConfig":"42"},{"size":1606,"mtime":1609599460522,"results":"44","hashOfConfig":"42"},{"size":5083,"mtime":1608657814990,"results":"45","hashOfConfig":"42"},{"size":1598,"mtime":1608732647322,"results":"46","hashOfConfig":"42"},{"size":2867,"mtime":1608728562061,"results":"47","hashOfConfig":"42"},{"size":195,"mtime":1608576059496,"results":"48","hashOfConfig":"42"},{"size":952,"mtime":1608729909860,"results":"49","hashOfConfig":"42"},{"size":404,"mtime":1608651484028,"results":"50","hashOfConfig":"42"},{"size":223,"mtime":1614684429106,"results":"51","hashOfConfig":"42"},{"size":1090,"mtime":1608738825684,"results":"52","hashOfConfig":"42"},{"size":613,"mtime":1614682582747,"results":"53","hashOfConfig":"42"},{"size":420,"mtime":1608652549236,"results":"54","hashOfConfig":"42"},{"size":4314,"mtime":1614685905147,"results":"55","hashOfConfig":"42"},{"size":365,"mtime":1608652693521,"results":"56","hashOfConfig":"42"},{"size":214,"mtime":1608652114957,"results":"57","hashOfConfig":"42"},{"size":542,"mtime":1608653559512,"results":"58","hashOfConfig":"42"},{"size":1148,"mtime":1608658346904,"results":"59","hashOfConfig":"42"},{"size":1846,"mtime":1608727570828,"results":"60","hashOfConfig":"42"},{"size":4577,"mtime":1608728771910,"results":"61","hashOfConfig":"42"},{"size":617,"mtime":1608732563256,"results":"62","hashOfConfig":"42"},{"size":1826,"mtime":1614688913659,"results":"63","hashOfConfig":"42"},{"size":815,"mtime":1609615468471,"results":"64","hashOfConfig":"42"},{"size":2995,"mtime":1612973789112,"results":"65","hashOfConfig":"42"},{"size":498,"mtime":1614686110963,"results":"66","hashOfConfig":"42"},{"size":4390,"mtime":1614521036255,"results":"67","hashOfConfig":"42"},{"size":5025,"mtime":1612979758949,"results":"68","hashOfConfig":"42"},{"size":1234,"mtime":1614688469956,"results":"69","hashOfConfig":"42"},{"size":1884,"mtime":1614688450124,"results":"70","hashOfConfig":"42"},{"size":1010,"mtime":1614688586434,"results":"71","hashOfConfig":"42"},{"size":2064,"mtime":1614688860742,"results":"72","hashOfConfig":"42"},{"size":1544,"mtime":1613486701910,"results":"73","hashOfConfig":"42"},{"size":2124,"mtime":1613737163608,"results":"74","hashOfConfig":"42"},{"size":461,"mtime":1613225810567,"results":"75","hashOfConfig":"42"},{"size":453,"mtime":1613485608751,"results":"76","hashOfConfig":"42"},{"size":396,"mtime":1613485176339,"results":"77","hashOfConfig":"42"},{"size":445,"mtime":1613827290759,"results":"78","hashOfConfig":"42"},{"size":7759,"mtime":1614522863248,"results":"79","hashOfConfig":"42"},{"size":634,"mtime":1614684693626,"results":"80","hashOfConfig":"42"},{"size":1098,"mtime":1614688302311,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"z86oao",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"84"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"84"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"84"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\index.js",[],["170","171"],"C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\reportWebVitals.js",[],"C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\App.js",[],"C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\auth\\Register.js",[],"C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\auth\\Account.js",[],"C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\auth\\SignIn.js",[],"C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\layout\\Container.js",[],"C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\layout\\Navbar.js",[],["172","173"],"C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\store.js",[],"C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\reducers\\index.js",[],"C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\reducers\\auth.js",[],"C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\actions\\types.js",[],"C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\reducers\\alerts.js",[],"C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\actions\\auth.js",[],"C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\actions\\alerts.js",[],"C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\utils\\api.js",[],"C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\auth\\Confirm.js",[],"C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\auth\\Reset.js",[],"C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\auth\\ResetPassword.js",[],"C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\layout\\Auth.js",[],"C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\dashboard\\Dashboard.js",[],"C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\layout\\Loading.js",[],"C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\layout\\Avatar.js",[],"C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\dashboard\\SideBar\\DashboardSideBar.js",["174","175","176"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Avatar from '../../layout/Avatar';\r\nimport SideBarNav from './SideBarNav';\r\nimport UserRooms from './UserRooms';\r\nconst DashboardSideBar = ({ user, setProfileOpen, rooms }) => {\r\n  return (\r\n    <div className=' sidebar border-right border-dark'>\r\n      <SideBarNav user={user} setProfileOpen={setProfileOpen} />\r\n      <UserRooms rooms={rooms} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardSideBar;\r\n","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\dashboard\\SideBar\\SideBarNav.js",["177"],"import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { logout } from '../../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\nimport $ from 'jquery';\r\nimport Avatar from '../../layout/Avatar';\r\nimport Modal from '../../layout/Modal';\r\nimport AddRoom from './AddRoom';\r\n\r\nconst SideBarNav = ({ user, setProfileOpen, logout }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className='sidebar-nav bg-main d-flex justify-content-between align-items-center'>\r\n        <div\r\n          onClick={() => {\r\n            setProfileOpen(true);\r\n          }}\r\n        >\r\n          <Avatar\r\n            avatar={user.avatar}\r\n            width='40'\r\n            edit={false}\r\n            cancel={false}\r\n            confirm={false}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button\r\n            className='btn btn-link text-center menu rounded-circle text-muted '\r\n            onClick={() => {\r\n              $('#addRoom').modal('show');\r\n            }}\r\n          >\r\n            <i className='fas fa-user-plus'></i>\r\n          </button>\r\n          <div className='dropdown d-inline '>\r\n            <button\r\n              className='btn btn-link text-center menu rounded-circle text-muted '\r\n              id='dropdownMenuButton'\r\n              data-toggle='dropdown'\r\n              aria-haspopup='true'\r\n              aria-expanded='false'\r\n            >\r\n              <i className='fas fa-ellipsis-v '></i>\r\n            </button>\r\n            <div\r\n              className='dropdown-menu dropdown-menu-right border-0 shadow cursor-pointer  bg-main text-white'\r\n              aria-labelledby='dropdownMenuButton'\r\n            >\r\n              <div\r\n                className='dropdown-item text-white py-2 '\r\n                onClick={() => {\r\n                  $('#addRoom').modal('show');\r\n                }}\r\n              >\r\n                <i className='fas fa-plus'></i> Add Room\r\n              </div>\r\n              <div\r\n                className='dropdown-item text-white  py-2'\r\n                onClick={() => {\r\n                  $('#joinRoom').modal('show');\r\n                }}\r\n              >\r\n                <i className='fas fa-user-plus'></i> Join Room\r\n              </div>\r\n              <div\r\n                className='dropdown-item text-white  py-2'\r\n                onClick={() => {\r\n                  setProfileOpen(true);\r\n                }}\r\n              >\r\n                <i className='fas fa-user'></i> User Profile\r\n              </div>\r\n\r\n              <div\r\n                className='dropdown-item text-white  py-2'\r\n                onClick={() => {\r\n                  logout();\r\n                }}\r\n              >\r\n                <i className='fas fa-sign-out-alt'></i> Logout\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal id='addRoom' Component={() => <AddRoom user={user} />} />\r\n      <Modal\r\n        id='joinRoom'\r\n        Component={() => (\r\n          <div className='modal-content rounded-0'>\r\n            <div className='modal-header bg-main rounded-0'>\r\n              <h4 className='modal-title ' id='staticBackdropLabel'>\r\n                Join\r\n              </h4>\r\n              <button\r\n                type='button'\r\n                className='close'\r\n                data-dismiss='modal'\r\n                aria-label='Close'\r\n              >\r\n                <span className='text-white' aria-hidden='true'>\r\n                  &times;\r\n                </span>\r\n              </button>\r\n            </div>\r\n            <div className='modal-body text-center' style={{ height: '7rem' }}>\r\n              {' '}\r\n              <h4>You need to be logged in to access Meetings</h4>{' '}\r\n            </div>\r\n            <div className='modal-footer'>\r\n              <button\r\n                type='button'\r\n                data-dismiss='modal'\r\n                aria-label='Close'\r\n                className='btn btn-dark bg-main rounded-0 '\r\n              >\r\n                Sign In\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nSideBarNav.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  setProfileOpen: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { logout })(SideBarNav);\r\n","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\dashboard\\Profile\\UserProfile.js",[],"C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\dashboard\\SideBar\\UserRooms.js",[],"C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\dashboard\\SideBar\\RoomItem.js",[],"C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\dashboard\\Chat\\ChatRoom.js",["178","179","180"],"import React, { useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { connect } from 'react-redux';\r\nimport { getChats, afterPostMessage } from '../../../actions/chat';\r\nimport ChatRoomFooter from './ChatRoomFooter';\r\nimport ChatRoomHeader from './ChatRoomHeader';\r\nimport ChatRoomMessages from './ChatRoomMessages';\r\n\r\nconst ChatRoom = ({ user, getChats, afterPostMessage, room }) => {\r\n  return (\r\n    <div className='chat-desktop'>\r\n      <div\r\n        className='chat-desktop'\r\n        style={{\r\n          backgroundImage:\r\n            'url(\"https://web.whatsapp.com/img/bg-chat-tile-dark_a4be512e7195b6b733d9110b408f075d.png\")',\r\n          backgroundRepeat: 'repeat',\r\n          opacity: 0.06,\r\n          backgroundAttachment: 'fixed',\r\n        }}\r\n      ></div>\r\n      <ChatRoomHeader user={user} room={room} />\r\n      <ChatRoomMessages />\r\n      <ChatRoomFooter user={user} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { getChats, afterPostMessage })(ChatRoom);\r\n","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\dashboard\\Chat\\ChatRoomHeader.js",[],"C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\dashboard\\Chat\\ChatRoomFooter.js",["181","182","183","184"],"import React, { useState } from 'react';\r\nimport { moment } from 'moment';\r\nconst ChatRoomFooter = ({ user }) => {\r\n  const [message, setMessage] = useState('');\r\n  return (\r\n    <div className='chatroom-footer'>\r\n      <form\r\n        className='form-inline w-100 border-0 rounded-pill '\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n\r\n          let chatMessage = message;\r\n          let userId = user.id;\r\n          let userName = user.username;\r\n          let nowTime = moment();\r\n\r\n          setMessage('');\r\n        }}\r\n      >\r\n        <div className='d-flex w-100 '>\r\n          <div className='input-group  bg-input w-100 rounded-pill  border-0 '>\r\n            <input\r\n              type='text'\r\n              className='form-control bg-transparent text-white w-100 mx-2  border-0 '\r\n              id='message'\r\n              placeholder='Type a message'\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n          </div>\r\n          <button className='text-white btn p-0 ml-3'>\r\n            <svg\r\n              xmlns='http://www.w3.org/2000/svg'\r\n              viewBox='0 0 24 24'\r\n              width='24'\r\n              height='24'\r\n            >\r\n              <path\r\n                fill='currentColor'\r\n                d='M1.101 21.757L23.8 12.028 1.101 2.3l.011 7.912 13.623 1.816-13.623 1.817-.011 7.912z'\r\n              ></path>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoomFooter;\r\n","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\dashboard\\Chat\\ChatRoomMessages.js",["185"],"import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getChats, afterPostMessage } from '../../../actions/chat';\r\nimport ChatRoomMessage from './ChatRoomMessage';\r\n\r\nconst ChatRoomMessages = ({ getChats, afterPostMessage, chats }) => {\r\n  useEffect(() => {\r\n    if (chats === null) {\r\n      //getChats();\r\n    }\r\n  }, [getChats]);\r\n  return (\r\n    <div className='chatroom-container d-flex flex-column'>\r\n      <ChatRoomMessage\r\n        user={false}\r\n        username={'oppailolitrap'}\r\n        text={\r\n          'Lorem ipsum dolor sit amet consectetur adipisicing elit. Molestias, labore.'\r\n        }\r\n        time={'4:07 pm'}\r\n      />\r\n      <ChatRoomMessage\r\n        user={true}\r\n        username={'oppailolitrap'}\r\n        text={'no'}\r\n        time={'4:10 pm'}\r\n      />\r\n      <ChatRoomMessage\r\n        user={false}\r\n        username={'oppailolitrap'}\r\n        text={\r\n          'Lorem ipsum dolor sit amet consectetur adipisicing elit. Molestias, labore.'\r\n        }\r\n        time={'4:07 pm'}\r\n      />\r\n      <ChatRoomMessage\r\n        user={true}\r\n        username={'oppailolitrap'}\r\n        text={'no'}\r\n        time={'4:10 pm'}\r\n      />\r\n      <ChatRoomMessage\r\n        user={false}\r\n        username={'oppailolitrap'}\r\n        text={\r\n          'Lorem ipsum dolor sit amet consectetur adipisicing elit. Molestias, labore.'\r\n        }\r\n        time={'4:07 pm'}\r\n      />\r\n      <ChatRoomMessage\r\n        user={true}\r\n        username={'oppailolitrap'}\r\n        text={'no'}\r\n        time={'4:10 pm'}\r\n      />\r\n      <ChatRoomMessage\r\n        user={false}\r\n        username={'oppailolitrap'}\r\n        text={\r\n          'Lorem ipsum dolor sit amet consectetur adipisicing elit. Molestias, labore.'\r\n        }\r\n        time={'4:07 pm'}\r\n      />\r\n      <ChatRoomMessage\r\n        user={true}\r\n        username={'oppailolitrap'}\r\n        text={'no'}\r\n        time={'4:10 pm'}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  chats: state.chat.chats,\r\n});\r\nexport default connect(mapStateToProps, { getChats, afterPostMessage })(\r\n  ChatRoomMessages,\r\n);\r\n","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\dashboard\\Chat\\ChatRoomMessage.js",[],"C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\reducers\\chat.js",[],"C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\actions\\chat.js",[],"C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\layout\\Modal.js",[],"C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\components\\dashboard\\SideBar\\AddRoom.js",["186","187","188"],"import React, { Fragment, useState } from 'react';\r\nimport Avatar from '../../layout/Avatar';\r\n\r\nconst AddRoom = ({ user }) => {\r\n  const [hidden, setHidden] = useState(true);\r\n  const [show, setShow] = useState(false);\r\n  const [next, setNext] = useState(true);\r\n\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    password: '',\r\n    description: '',\r\n  });\r\n\r\n  //Avatar\r\n  const [edit, setEdit] = useState(false);\r\n  const [confirm, setConfirm] = useState(false);\r\n  const [cancel, setCancel] = useState(false);\r\n  const [selected, setSelected] = useState(false);\r\n\r\n  const { title, password, description } = formData;\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    window.scrollTo(0, 0);\r\n\r\n    console.log(formData);\r\n  };\r\n\r\n  return (\r\n    <div className='modal-content border-0'>\r\n      <div className='modal-header bg-main border-0 '>\r\n        <h4 className='modal-title ' id='staticBackdropLabel'>\r\n          Create a Server\r\n        </h4>\r\n        <button\r\n          type='button'\r\n          className='close'\r\n          data-dismiss='modal'\r\n          aria-label='Close'\r\n        >\r\n          <span className='text-white' aria-hidden='true'>\r\n            &times;\r\n          </span>\r\n        </button>\r\n      </div>\r\n      {!next ? (\r\n        <div className='modal-body text-center border-0  bg-main'>\r\n          <h6 className='text-muted mb-4'>\r\n            Your Server is where you and your friends hangout. Make yours and\r\n            start talking\r\n          </h6>\r\n          <form className='text-left'>\r\n            <label htmlFor='title'>\r\n              Title <span className='text-muted'>(required)</span>\r\n            </label>\r\n            <div className='form-inline  mb-4'>\r\n              <input\r\n                type='text'\r\n                className='form-control   w-100'\r\n                id='title'\r\n                aria-describedby='emailHelp'\r\n                placeholder='Enter a Title...'\r\n                required\r\n                value={title}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n            <div className='form-group'>\r\n              <label for='description'>\r\n                Description <span className='text-muted'>(required)</span>\r\n              </label>\r\n              <textarea\r\n                className='form-control'\r\n                id='description'\r\n                rows='3'\r\n                placeholder='Add a description...'\r\n                required\r\n                value={description}\r\n                onChange={(e) => onChange(e)}\r\n              ></textarea>\r\n            </div>\r\n            <div className='form-check form-check-inlinemy-2'>\r\n              <input\r\n                className='form-check-input'\r\n                type='checkbox'\r\n                id='defaultCheck1'\r\n                value={show}\r\n                checked={show}\r\n                onClick={() => setShow(!show)}\r\n              />\r\n              <label className='form-check-label' for='defaultCheck1'>\r\n                Private\r\n              </label>\r\n            </div>\r\n            {show && (\r\n              <Fragment>\r\n                <label htmlFor='password'>Password</label>\r\n                <div className='form-inline mb-4'>\r\n                  <div className='input-group w-100 '>\r\n                    <input\r\n                      type={hidden ? 'password' : 'text'}\r\n                      className='form-control '\r\n                      id='password'\r\n                      placeholder='Enter a password...'\r\n                      value={password}\r\n                      onChange={(e) => onChange(e)}\r\n                    />{' '}\r\n                    <div className='input-group-prepend'>\r\n                      <span\r\n                        className='input-group-text border-left-0 cursor-pointer rounded-right'\r\n                        id='inputGroupFileAddon01'\r\n                        onClick={() => setHidden(!hidden)}\r\n                      >\r\n                        {!hidden ? (\r\n                          <i className='far fa-eye-slash'></i>\r\n                        ) : (\r\n                          <i className='far fa-eye'></i>\r\n                        )}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Fragment>\r\n            )}\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <div className='modal-body  border-0  bg-main'>\r\n          <div className='d-flex justify-content-around w-100 py-4'>\r\n            <div className='profile-avatar text-center'>\r\n              <Avatar\r\n                avatar={user.avatar}\r\n                width='200'\r\n                edit={true}\r\n                cancel={cancel}\r\n                confirm={confirm}\r\n                setSelected={setSelected}\r\n                setCancel={setCancel}\r\n                setConfirm={setConfirm}\r\n              />\r\n            </div>\r\n          </div>\r\n          {selected && (\r\n            <div className='d-flex justify-content-around'>\r\n              <div\r\n                className='rounded-circle bg-success btn text-white btn-profile '\r\n                onClick={() => {\r\n                  setConfirm(true);\r\n                }}\r\n              >\r\n                <i className='fas fa-check'></i>\r\n              </div>\r\n              <div\r\n                className='rounded-circle bg-danger btn text-white btn-profile '\r\n                onClick={() => {\r\n                  setCancel(true);\r\n                }}\r\n              >\r\n                <i className='fas fa-times'></i>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <label htmlFor='link'>Invitation Link</label>\r\n          <div className='form-inline mb-4 bg-transparent border-primary'>\r\n            <div className='input-group w-100 '>\r\n              <input\r\n                type='text'\r\n                className='form-control bg-transparent border-primary text-white '\r\n                id='link'\r\n                readOnly\r\n                disabled\r\n                value={\r\n                  'sadusbauydvuyasvuyavdtyvsadiysadiasctdcatscdsadcsatiudasuduysagdyugasuydsyugdya'\r\n                }\r\n              />{' '}\r\n              <div className='input-group-prepend  bg-transparent '>\r\n                <button\r\n                  className=' border-left-0 cursor-pointer border-primary btn btn-outline-primary text-white rounded-right'\r\n                  id='copy'\r\n                  data-toggle='tooltip'\r\n                  title='Copy to Clipboard'\r\n                  onClick={() =>\r\n                    navigator.clipboard.writeText(\r\n                      'sadusbauydvuyasvuyavdtyvsadiysadiasctdcatscdsadcsatiudasuduysagdyugasuydsyugdya',\r\n                    )\r\n                  }\r\n                >\r\n                  <i className='fas fa-copy'></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className='modal-footer bg-main border-0 '>\r\n        {!next ? (\r\n          <button\r\n            type='Submit'\r\n            className='btn   border-0 account-btn btn-block\r\n          btn-primary ml-auto '\r\n            onClick={(e) => onSubmit(e)}\r\n          >\r\n            Create Server\r\n          </button>\r\n        ) : (\r\n          <button\r\n            type='Submit'\r\n            className='btn   border-0 account-btn btn-block\r\n          btn-primary ml-auto '\r\n            data-dismiss='modal'\r\n            aria-label='Close'\r\n            onClick={(e) => onSubmit(e)}\r\n          >\r\n            Done\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddRoom;\r\n","C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\reducers\\room.js",[],"C:\\Users\\pc\\Desktop\\Chathub\\client\\src\\actions\\room.js",[],{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"189","replacedBy":"193"},{"ruleId":"191","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":25},{"ruleId":"195","severity":1,"message":"199","line":2,"column":10,"nodeType":"197","messageId":"198","endLine":2,"endColumn":14},{"ruleId":"195","severity":1,"message":"200","line":3,"column":8,"nodeType":"197","messageId":"198","endLine":3,"endColumn":14},{"ruleId":"195","severity":1,"message":"199","line":3,"column":10,"nodeType":"197","messageId":"198","endLine":3,"endColumn":14},{"ruleId":"195","severity":1,"message":"201","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":26},{"ruleId":"195","severity":1,"message":"196","line":1,"column":28,"nodeType":"197","messageId":"198","endLine":1,"endColumn":36},{"ruleId":"195","severity":1,"message":"202","line":2,"column":8,"nodeType":"197","messageId":"198","endLine":2,"endColumn":10},{"ruleId":"195","severity":1,"message":"203","line":12,"column":15,"nodeType":"197","messageId":"198","endLine":12,"endColumn":26},{"ruleId":"195","severity":1,"message":"204","line":13,"column":15,"nodeType":"197","messageId":"198","endLine":13,"endColumn":21},{"ruleId":"195","severity":1,"message":"205","line":14,"column":15,"nodeType":"197","messageId":"198","endLine":14,"endColumn":23},{"ruleId":"195","severity":1,"message":"206","line":15,"column":15,"nodeType":"197","messageId":"198","endLine":15,"endColumn":22},{"ruleId":"207","severity":1,"message":"208","line":11,"column":6,"nodeType":"209","endLine":11,"endColumn":16,"suggestions":"210"},{"ruleId":"195","severity":1,"message":"211","line":7,"column":16,"nodeType":"197","messageId":"198","endLine":7,"endColumn":23},{"ruleId":"195","severity":1,"message":"212","line":16,"column":10,"nodeType":"197","messageId":"198","endLine":16,"endColumn":14},{"ruleId":"195","severity":1,"message":"213","line":16,"column":16,"nodeType":"197","messageId":"198","endLine":16,"endColumn":23},"no-native-reassign",["214"],"no-negated-in-lhs",["215"],["214"],["215"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Avatar' is defined but never used.","'useEffect' is defined but never used.","'io' is defined but never used.","'chatMessage' is assigned a value but never used.","'userId' is assigned a value but never used.","'userName' is assigned a value but never used.","'nowTime' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'chats'. Either include it or remove the dependency array.","ArrayExpression",["216"],"'setNext' is assigned a value but never used.","'edit' is assigned a value but never used.","'setEdit' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"217","fix":"218"},"Update the dependencies array to be: [chats, getChats]",{"range":"219","text":"220"},[356,366],"[chats, getChats]"]