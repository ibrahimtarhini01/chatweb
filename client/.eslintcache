[{"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\index.js":"1","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\App.js":"2","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\reportWebVitals.js":"3","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\store.js":"4","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\layout\\Container.js":"5","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\auth\\Account.js":"6","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\layout\\Auth.js":"7","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\auth\\Reset.js":"8","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\auth\\Confirm.js":"9","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\dashboard\\Dashboard.js":"10","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\auth\\ResetPassword.js":"11","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\reducers\\index.js":"12","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\auth\\Register.js":"13","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\auth\\SignIn.js":"14","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\layout\\Alert.js":"15","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\layout\\Loading.js":"16","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\actions\\auth.js":"17","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\actions\\alerts.js":"18","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\dashboard\\SideBar\\DashboardSideBar.js":"19","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\dashboard\\Profile\\UserProfile.js":"20","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\dashboard\\Chat\\ChatRoom.js":"21","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\reducers\\chat.js":"22","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\reducers\\auth.js":"23","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\reducers\\alerts.js":"24","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\reducers\\room.js":"25","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\actions\\room.js":"26","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\actions\\types.js":"27","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\layout\\Avatar.js":"28","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\dashboard\\SideBar\\SideBarNav.js":"29","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\dashboard\\SideBar\\UserRooms.js":"30","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\actions\\chat.js":"31","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\dashboard\\Chat\\ChatRoomDefault.js":"32","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\dashboard\\Chat\\ChatRoomFooter.js":"33","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\dashboard\\Chat\\ChatRoomHeader.js":"34","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\dashboard\\Chat\\ChatRoomMessages.js":"35","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\utils\\api.js":"36","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\layout\\Modal.js":"37","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\dashboard\\SideBar\\RoomItem.js":"38","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\dashboard\\SideBar\\AddRoom.js":"39","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\dashboard\\Chat\\ChatRoomMessage.js":"40","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\dashboard\\SideBar\\JoinRoom.js":"41","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\dashboard\\Profile\\RoomProfile.js":"42"},{"size":316,"mtime":1609073279705,"results":"43","hashOfConfig":"44"},{"size":1400,"mtime":1639657385395,"results":"45","hashOfConfig":"44"},{"size":362,"mtime":499162500000,"results":"46","hashOfConfig":"44"},{"size":404,"mtime":1608651484028,"results":"47","hashOfConfig":"44"},{"size":195,"mtime":1608576059496,"results":"48","hashOfConfig":"44"},{"size":2854,"mtime":1639659120500,"results":"49","hashOfConfig":"44"},{"size":617,"mtime":1608732563256,"results":"50","hashOfConfig":"44"},{"size":1846,"mtime":1608727570828,"results":"51","hashOfConfig":"44"},{"size":1148,"mtime":1608658346904,"results":"52","hashOfConfig":"44"},{"size":3195,"mtime":1636369793007,"results":"53","hashOfConfig":"44"},{"size":4577,"mtime":1608728771910,"results":"54","hashOfConfig":"44"},{"size":223,"mtime":1614684429106,"results":"55","hashOfConfig":"44"},{"size":5083,"mtime":1639657777413,"results":"56","hashOfConfig":"44"},{"size":2867,"mtime":1608728562061,"results":"57","hashOfConfig":"44"},{"size":542,"mtime":1608653559512,"results":"58","hashOfConfig":"44"},{"size":815,"mtime":1609615468471,"results":"59","hashOfConfig":"44"},{"size":4417,"mtime":1636027705454,"results":"60","hashOfConfig":"44"},{"size":365,"mtime":1608652693521,"results":"61","hashOfConfig":"44"},{"size":761,"mtime":1634123182059,"results":"62","hashOfConfig":"44"},{"size":5025,"mtime":1612979758949,"results":"63","hashOfConfig":"44"},{"size":2673,"mtime":1636373564976,"results":"64","hashOfConfig":"44"},{"size":453,"mtime":1613485608751,"results":"65","hashOfConfig":"44"},{"size":1091,"mtime":1633514241863,"results":"66","hashOfConfig":"44"},{"size":420,"mtime":1633167646284,"results":"67","hashOfConfig":"44"},{"size":3347,"mtime":1636373339742,"results":"68","hashOfConfig":"44"},{"size":3898,"mtime":1636368134649,"results":"69","hashOfConfig":"44"},{"size":979,"mtime":1636368074912,"results":"70","hashOfConfig":"44"},{"size":3308,"mtime":1615287920966,"results":"71","hashOfConfig":"44"},{"size":3772,"mtime":1633433202655,"results":"72","hashOfConfig":"44"},{"size":2034,"mtime":1636027781377,"results":"73","hashOfConfig":"44"},{"size":396,"mtime":1613485176339,"results":"74","hashOfConfig":"75"},{"size":1178,"mtime":1614866797077,"results":"76","hashOfConfig":"44"},{"size":2368,"mtime":1636373461454,"results":"77","hashOfConfig":"44"},{"size":2940,"mtime":1636370758373,"results":"78","hashOfConfig":"44"},{"size":1995,"mtime":1637323924073,"results":"79","hashOfConfig":"44"},{"size":214,"mtime":1608652114957,"results":"80","hashOfConfig":"44"},{"size":445,"mtime":1613827290759,"results":"81","hashOfConfig":"44"},{"size":2058,"mtime":1636026429668,"results":"82","hashOfConfig":"44"},{"size":7896,"mtime":1636024515166,"results":"83","hashOfConfig":"44"},{"size":648,"mtime":1633521336027,"results":"84","hashOfConfig":"44"},{"size":4845,"mtime":1633266016061,"results":"85","hashOfConfig":"44"},{"size":20820,"mtime":1636024786704,"results":"86","hashOfConfig":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"hr9q0u",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"89"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"89"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"89"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},"1mfk1z7",{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"89"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"89"},"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\index.js",[],["178","179"],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\App.js",[],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\reportWebVitals.js",[],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\store.js",[],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\layout\\Container.js",[],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\auth\\Account.js",[],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\layout\\Auth.js",[],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\auth\\Reset.js",[],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\auth\\Confirm.js",[],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\dashboard\\Dashboard.js",[],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\auth\\ResetPassword.js",[],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\reducers\\index.js",[],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\auth\\Register.js",[],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\auth\\SignIn.js",[],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\layout\\Loading.js",[],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\actions\\auth.js",[],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\actions\\alerts.js",[],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\dashboard\\SideBar\\DashboardSideBar.js",["180"],"import React, { useState } from 'react';\r\nimport SideBarNav from './SideBarNav';\r\nimport UserRooms from './UserRooms';\r\nconst DashboardSideBar = ({\r\n  user,\r\n  setProfileOpen,\r\n  rooms,\r\n  room,\r\n  next,\r\n  roomPreview,\r\n  setUserProfile,\r\n  socket,\r\n}) => {\r\n  return (\r\n    <div\r\n      className={` sidebar border-right border-dark ${\r\n        room !== null && window.innerWidth < 800 && !next ? 'd-none' : ''\r\n      }`}\r\n    >\r\n      <SideBarNav\r\n        user={user}\r\n        setProfileOpen={setProfileOpen}\r\n        room={room}\r\n        next={next}\r\n        roomPreview={roomPreview}\r\n        setUserProfile={setUserProfile}\r\n      />\r\n      <UserRooms rooms={rooms} socket={socket} user={user} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardSideBar;\r\n","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\dashboard\\Profile\\UserProfile.js",[],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\dashboard\\Chat\\ChatRoom.js",["181","182","183","184","185","186"],"import React, { Fragment, useEffect, useState, useRef } from 'react';\r\nimport io, { Socket } from 'socket.io-client';\r\nimport ChatRoomFooter from './ChatRoomFooter';\r\nimport ChatRoomHeader from './ChatRoomHeader';\r\nimport ChatRoomMessages from './ChatRoomMessages';\r\nimport ChatRoomDefault from './ChatRoomDefault';\r\n\r\nconst ChatRoom = ({\r\n  user,\r\n  room,\r\n  next,\r\n  setProfileOpen,\r\n  setUserProfile,\r\n  profileOpen,\r\n  socket,\r\n  setLastMessage,\r\n}) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [arrivalMessage, setArrivalMessage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (room !== null && socket.current !== undefined)\r\n      socket.current.emit('addRoom', room._id);\r\n  }, [room]);\r\n\r\n  useEffect(() => {\r\n    if (socket.current !== undefined)\r\n      socket.current.on('getMessage', (data) => {\r\n        if (data.sender.id !== user.id) {\r\n          setLastMessage(data);\r\n          setArrivalMessage({\r\n            sender: data.sender,\r\n            message: data.message,\r\n            room: data.room,\r\n            createdAt: Date.now(),\r\n          });\r\n        }\r\n      });\r\n  }, [socket]);\r\n\r\n  /*useEffect(() => {\r\n    arrivalMessage && setMessages((prev) => [...prev, arrivalMessage]);\r\n    console.log(arrivalMessage);\r\n  }, [arrivalMessage]);*/\r\n\r\n  useEffect(() => {\r\n    if (room !== null) {\r\n      setMessages(room.chat);\r\n    }\r\n  }, [room]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {room !== null ? (\r\n        <div\r\n          className={`${\r\n            room !== null && window.innerWidth < 800 && !next\r\n              ? 'chat-mobile'\r\n              : 'chat-desktop'\r\n          }`}\r\n        >\r\n          <div\r\n            className=''\r\n            style={{\r\n              backgroundImage: 'url(\"bg.png\")',\r\n              height: '100%',\r\n              width: '100%',\r\n              backgroundRepeat: 'repeat',\r\n              opacity: 0.06,\r\n              backgroundAttachment: 'fixed',\r\n            }}\r\n          ></div>\r\n          <ChatRoomHeader\r\n            user={user}\r\n            room={room}\r\n            setProfileOpen={setProfileOpen}\r\n            setUserProfile={setUserProfile}\r\n            profileOpen={profileOpen}\r\n          />\r\n          <ChatRoomMessages\r\n            user={user}\r\n            messages={messages === undefined ? [] : messages}\r\n          />\r\n          <ChatRoomFooter\r\n            user={user}\r\n            setMessages={setMessages}\r\n            messages={messages}\r\n            socket={socket}\r\n            setLastMessage={setLastMessage}\r\n            room={room}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <ChatRoomDefault />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;\r\n","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\reducers\\chat.js",[],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\reducers\\auth.js",[],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\reducers\\alerts.js",[],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\reducers\\room.js",[],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\actions\\room.js",[],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\actions\\types.js",[],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\layout\\Avatar.js",[],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\dashboard\\SideBar\\SideBarNav.js",[],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\dashboard\\SideBar\\UserRooms.js",["187","188"],"import React, { useState, useEffect } from 'react';\r\nimport RoomItem from './RoomItem';\r\n\r\nconst UserRooms = ({ rooms, socket, user }) => {\r\n  const [search, setSearch] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (search !== null) {\r\n      setSearch(rooms);\r\n    }\r\n  }, [rooms, setSearch]);\r\n  useEffect(() => {\r\n    if (search === null) {\r\n      setSearch(rooms);\r\n      rooms.forEach((room) => {\r\n        console.log(room);\r\n        if (socket.current !== undefined)\r\n          socket.current.emit('joinUser', room._id, user.username);\r\n      });\r\n    }\r\n  }, [rooms, setSearch, socket]);\r\n  return (\r\n    <div>\r\n      <div className=' border-bottom border-dark py-2 px-4  '>\r\n        <div className='form-inline w-100 bg-input border-0 rounded-pill '>\r\n          <div className='d-flex w-100'>\r\n            <button className='search btn text-muted d-flex text-center align-items-center justify-content-around'>\r\n              <i className='fas fa-search'></i>\r\n            </button>\r\n            <div className='input-group  bg-transparent  border-0 w-50'>\r\n              <input\r\n                type='text'\r\n                className='form-control bg-transparent  border-0  text-white'\r\n                id='search'\r\n                placeholder='Search...'\r\n                onChange={(e) => {\r\n                  if (e.target.value !== '')\r\n                    setSearch(\r\n                      search.filter((room) =>\r\n                        room.title\r\n                          .toUpperCase()\r\n                          .includes(e.target.value.toUpperCase()),\r\n                      ),\r\n                    );\r\n                  else setSearch(rooms);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {search !== null && (\r\n        <div className='overflow-auto rooms'>\r\n          {search.map((room, id) => {\r\n            return <RoomItem room={room} key={id} />;\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserRooms;\r\n","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\actions\\chat.js",[],["189","190"],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\dashboard\\Chat\\ChatRoomDefault.js",[],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\dashboard\\Chat\\ChatRoomFooter.js",[],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\dashboard\\Chat\\ChatRoomHeader.js",[],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\dashboard\\Chat\\ChatRoomMessages.js",[],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\utils\\api.js",[],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\layout\\Modal.js",[],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\dashboard\\SideBar\\RoomItem.js",[],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\dashboard\\SideBar\\AddRoom.js",["191","192"],"import React, { Fragment, useState } from 'react';\r\nimport Avatar from '../../layout/Avatar';\r\nimport { connect } from 'react-redux';\r\nimport { createRoom, clearRoom } from '../../../actions/room';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddRoom = ({ user, createRoom, room, next, clearRoom }) => {\r\n  const [hidden, setHidden] = useState(true);\r\n  const [show, setShow] = useState(false);\r\n\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    password: '',\r\n    description: '',\r\n  });\r\n\r\n  //Avatar\r\n  const [edit, setEdit] = useState(false);\r\n  const [confirm, setConfirm] = useState(false);\r\n  const [cancel, setCancel] = useState(false);\r\n  const [selected, setSelected] = useState(false);\r\n\r\n  const { title, password, description } = formData;\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const onSubmitCreate = (e) => {\r\n    e.preventDefault();\r\n    window.scrollTo(0, 0);\r\n    if (password === '') {\r\n      createRoom({ title, description });\r\n    } else {\r\n      createRoom({ title, description, password });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='modal-content border-0'>\r\n      <div className='modal-header bg-main border-0 '>\r\n        <h4 className='modal-title ' id='staticBackdropLabel'>\r\n          Create a Room\r\n        </h4>\r\n        <button\r\n          type='button'\r\n          className='close'\r\n          data-dismiss='modal'\r\n          aria-label='Close'\r\n        >\r\n          <span className='text-white' aria-hidden='true'>\r\n            &times;\r\n          </span>\r\n        </button>\r\n      </div>\r\n      {!next ? (\r\n        <div className='modal-body text-center border-0  bg-main'>\r\n          <h6 className='text-muted mb-4'>\r\n            Your Room is where you and your friends hangout. Make yours and\r\n            start talking\r\n          </h6>\r\n          <form className='text-left'>\r\n            <label htmlFor='title'>\r\n              Title <span className='text-muted'>(required)</span>\r\n            </label>\r\n            <div className='form-inline  mb-4'>\r\n              <input\r\n                type='text'\r\n                className='form-control   w-100'\r\n                id='title'\r\n                aria-describedby='emailHelp'\r\n                placeholder='Enter a Title...'\r\n                required\r\n                value={title}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n            <div className='form-group'>\r\n              <label htmlFor='description'>\r\n                Description <span className='text-muted'>(required)</span>\r\n              </label>\r\n              <textarea\r\n                className='form-control'\r\n                id='description'\r\n                rows='3'\r\n                placeholder='Add a description...'\r\n                required\r\n                value={description}\r\n                onChange={(e) => onChange(e)}\r\n              ></textarea>\r\n            </div>\r\n            <div className='form-check form-check-inlinemy-2'>\r\n              <input\r\n                className='form-check-input'\r\n                type='checkbox'\r\n                id='defaultCheck1'\r\n                value={show}\r\n                checked={show}\r\n                onChange={() => setShow(!show)}\r\n              />\r\n              <label className='form-check-label' htmlFor='defaultCheck1'>\r\n                Private\r\n              </label>\r\n            </div>\r\n            {show && (\r\n              <Fragment>\r\n                <label htmlFor='password'>Password</label>\r\n                <div className='form-inline mb-4'>\r\n                  <div className='input-group w-100 '>\r\n                    <input\r\n                      type={hidden ? 'password' : 'text'}\r\n                      className='form-control '\r\n                      id='password'\r\n                      placeholder='Enter a password...'\r\n                      value={password}\r\n                      onChange={(e) => onChange(e)}\r\n                    />{' '}\r\n                    <div className='input-group-prepend'>\r\n                      <span\r\n                        className='input-group-text border-left-0 cursor-pointer rounded-right'\r\n                        id='inputGroupFileAddon01'\r\n                        onClick={() => setHidden(!hidden)}\r\n                      >\r\n                        {!hidden ? (\r\n                          <i className='far fa-eye-slash'></i>\r\n                        ) : (\r\n                          <i className='far fa-eye'></i>\r\n                        )}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Fragment>\r\n            )}\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <div className='modal-body  border-0  bg-main'>\r\n          <div className='d-flex justify-content-around w-100 py-4'>\r\n            <div className='profile-avatar text-center'>\r\n              <Avatar\r\n                room_id={room._id}\r\n                avatar={room.avatar}\r\n                width='200'\r\n                edit={true}\r\n                cancel={cancel}\r\n                confirm={confirm}\r\n                setSelected={setSelected}\r\n                setCancel={setCancel}\r\n                setConfirm={setConfirm}\r\n              />\r\n            </div>\r\n          </div>\r\n          {selected && (\r\n            <div className='d-flex justify-content-around'>\r\n              <div\r\n                className='rounded-circle bg-success btn text-white btn-profile '\r\n                onClick={() => {\r\n                  setConfirm(true);\r\n                }}\r\n              >\r\n                <i className='fas fa-check'></i>\r\n              </div>\r\n              <div\r\n                className='rounded-circle bg-danger btn text-white btn-profile '\r\n                onClick={() => {\r\n                  setCancel(true);\r\n                }}\r\n              >\r\n                <i className='fas fa-times'></i>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <label htmlFor='link'>Invitation ID</label>\r\n          <div className='form-inline mb-4 bg-transparent border-primary'>\r\n            <div className='input-group w-100 '>\r\n              <input\r\n                type='text'\r\n                className='form-control bg-transparent border-primary text-white '\r\n                id='link'\r\n                readOnly\r\n                disabled\r\n                value={room._id}\r\n              />{' '}\r\n              <div className='input-group-prepend  bg-transparent '>\r\n                <button\r\n                  className=' border-left-0 cursor-pointer border-primary btn btn-outline-primary text-white rounded-right'\r\n                  id='copy'\r\n                  data-toggle='tooltip'\r\n                  title='Copy to Clipboard'\r\n                  onClick={() => navigator.clipboard.writeText(room._id)}\r\n                >\r\n                  <i className='fas fa-copy'></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className='modal-footer bg-main border-0 '>\r\n        {!next ? (\r\n          <button\r\n            type='Submit'\r\n            className='btn   border-0 account-btn btn-block\r\n          btn-primary ml-auto '\r\n            onClick={(e) => onSubmitCreate(e)}\r\n          >\r\n            Create Server\r\n          </button>\r\n        ) : (\r\n          <button\r\n            type='Submit'\r\n            className='btn   border-0 account-btn btn-block\r\n          btn-primary ml-auto '\r\n            onClick={() => clearRoom()}\r\n            data-dismiss='modal'\r\n            aria-label='Close'\r\n          >\r\n            Done\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddRoom.propTypes = {\r\n  createRoom: PropTypes.func.isRequired,\r\n};\r\nexport default connect(null, { createRoom, clearRoom })(AddRoom);\r\n","C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\dashboard\\Chat\\ChatRoomMessage.js",[],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\dashboard\\SideBar\\JoinRoom.js",[],"C:\\Users\\pc\\OneDrive\\Desktop\\Chathub\\client\\src\\components\\dashboard\\Profile\\RoomProfile.js",["193","194"],"import React, { useState, useEffect } from 'react';\r\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from 'react-contextmenu';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  kickMember,\r\n  makeAdmin,\r\n  removeAdmin,\r\n  updateRoomInfo,\r\n  editPassword,\r\n} from '../../../actions/room';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Avatar from '../../layout/Avatar';\r\nimport Alert from '../../layout/Alert';\r\nimport { setAlert } from '../../../actions/alerts';\r\n\r\nconst RoomProfile = ({\r\n  open,\r\n  setProfileOpen,\r\n  room,\r\n  user,\r\n  kickMember,\r\n  makeAdmin,\r\n  removeAdmin,\r\n  updateRoomInfo,\r\n  editPassword,\r\n  setAlert,\r\n}) => {\r\n  const [priv, setPriv] = useState(false);\r\n  const [hidden, setHidden] = useState(true);\r\n  const [hidden2, setHidden2] = useState(true);\r\n  const [password, setPassword] = useState('');\r\n  const [password2, setPassword2] = useState('');\r\n\r\n  const [title, setTitle] = useState(room !== null ? room.title : '');\r\n  const [description, setDescription] = useState(\r\n    room !== null ? room.description : '',\r\n  );\r\n  const [admin, setAdmin] = useState(\r\n    room !== null\r\n      ? room.admin.filter((item) => item.user === user.id).length > 0\r\n      : false,\r\n  );\r\n\r\n  const [titleEdit, setTitleEdit] = useState(false);\r\n  const [descriptionEdit, setDescriptionEdit] = useState(false);\r\n  const [confirm, setConfirm] = useState(false);\r\n  const [cancel, setCancel] = useState(false);\r\n  const [selected, setSelected] = useState(false);\r\n\r\n  return (\r\n    <div\r\n      className={`profile text-center profile-animation-${\r\n        open ? 'open' : open === false ? 'close' : ''\r\n      }`}\r\n    >\r\n      <div className='d-flex mt-5 align-items-center py-3'>\r\n        <i\r\n          className='fas fa-arrow-left  mx-4 cursor-pointer'\r\n          onClick={() => setProfileOpen(false)}\r\n        ></i>{' '}\r\n        <h4 className='mb-0 '>Room Profile</h4>\r\n      </div>\r\n      <div className='profile-inner px-3  pt-3 overflow-auto'>\r\n        <div className='mt-2'>\r\n          <Alert />\r\n        </div>\r\n        <div className='d-flex justify-content-around w-100 py-4'>\r\n          <div className='profile-avatar text-center'>\r\n            {room !== null && (\r\n              <Avatar\r\n                avatar={room.avatar}\r\n                room_id={room._id}\r\n                width='200'\r\n                open={open}\r\n                edit={admin}\r\n                cancel={cancel}\r\n                confirm={confirm}\r\n                setSelected={setSelected}\r\n                setCancel={setCancel}\r\n                setConfirm={setConfirm}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n        {selected && (\r\n          <div className='d-flex justify-content-around'>\r\n            <div\r\n              className='rounded-circle bg-success btn text-white btn-profile '\r\n              onClick={() => {\r\n                setConfirm(true);\r\n                setProfileOpen(false);\r\n              }}\r\n            >\r\n              <i class='fas fa-check'></i>\r\n            </div>\r\n            <div\r\n              className='rounded-circle bg-danger btn text-white btn-profile '\r\n              onClick={() => {\r\n                setCancel(true);\r\n              }}\r\n            >\r\n              <i class='fas fa-times'></i>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div\r\n          className={`teal text-left mx-4 ${\r\n            titleEdit ? 'border-bottom border-teal' : ''\r\n          } `}\r\n        >\r\n          <label htmlFor='title'>Title</label>\r\n          <div className='form-inline  bg-transparent'>\r\n            <div className='input-group w-100 bg-transparent'>\r\n              {!titleEdit ? (\r\n                <input\r\n                  disabled\r\n                  type='text'\r\n                  className='form-control rounded-0  text-white bg-transparent border-0 '\r\n                  id='title'\r\n                  required\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n              ) : (\r\n                <input\r\n                  type='text'\r\n                  className='form-control rounded-0  text-white bg-transparent border-0 '\r\n                  id='title'\r\n                  required\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n              )}\r\n              {admin && (\r\n                <div className='input-group-prepend bg-transparent border-0'>\r\n                  <span\r\n                    className='input-group-text border-0 cursor-pointer bg-transparent '\r\n                    id='inputGroupFileAddon01'\r\n                    onClick={() => {\r\n                      if (titleEdit && title !== user.title) {\r\n                        updateRoomInfo(room._id, { description, title });\r\n                      }\r\n                      setTitleEdit(!titleEdit);\r\n                    }}\r\n                  >\r\n                    {titleEdit ? (\r\n                      <i className='fas fa-check teal'></i>\r\n                    ) : (\r\n                      <i className='fas fa-pen'></i>\r\n                    )}\r\n                  </span>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='teal text-left mx-4 my-2 '>\r\n          <label htmlFor='description'>Description</label>\r\n          <div className='form-inline  bg-transparent'>\r\n            <div className='input-group w-100 bg-transparent'>\r\n              {!descriptionEdit ? (\r\n                <textarea\r\n                  disabled\r\n                  className='form-control rounded  text-white bg-transparent border border-secondary '\r\n                  id='description'\r\n                  required\r\n                  value={description}\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                />\r\n              ) : (\r\n                <textarea\r\n                  className={\r\n                    'form-control rounded  text-white bg-transparent border border-teal '\r\n                  }\r\n                  id='description'\r\n                  required\r\n                  value={description}\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                />\r\n              )}\r\n              {admin && (\r\n                <div className='input-group-prepend bg-transparent border-0'>\r\n                  <span\r\n                    className='input-group-text border-0 cursor-pointer bg-transparent '\r\n                    id='inputGroupFileAddon01'\r\n                    onClick={() => {\r\n                      if (descriptionEdit && description !== room.description) {\r\n                        updateRoomInfo(room._id, { description, title });\r\n                      }\r\n                      setDescriptionEdit(!descriptionEdit);\r\n                    }}\r\n                  >\r\n                    {descriptionEdit ? (\r\n                      <i className='fas fa-check teal'></i>\r\n                    ) : (\r\n                      <i className='fas fa-pen'></i>\r\n                    )}\r\n                  </span>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='form bg-transparent text-left teal border-secondary mx-4 my-2'>\r\n          <label htmlFor='invitation'>Invitation ID</label>\r\n          <div className='input-group w-100 '>\r\n            <input\r\n              type='text'\r\n              className='form-control bg-transparent border-secondary text-white '\r\n              id='link'\r\n              readOnly\r\n              disabled\r\n              value={room._id}\r\n            />{' '}\r\n            <div className='input-group-prepend  bg-transparent '>\r\n              <button\r\n                className=' border-left-0 cursor-pointer border-secondary btn btn-outline-secondary text-white rounded-right'\r\n                id='copy'\r\n                data-toggle='tooltip'\r\n                title='Copy to Clipboard'\r\n                onClick={() => navigator.clipboard.writeText(room._id)}\r\n              >\r\n                <i className='fas fa-copy'></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {admin && (\r\n          <div className=''>\r\n            {room.public ? (\r\n              <div className={`teal text-left mx-4 my-4  `}>\r\n                {!priv && (\r\n                  <div\r\n                    className='ml-auto bg-teal text-white btn teal-hover'\r\n                    onClick={() => {\r\n                      setPriv(true);\r\n                    }}\r\n                  >\r\n                    Make Private\r\n                  </div>\r\n                )}\r\n                {priv && (\r\n                  <div\r\n                    className='ml-auto  text-white btn btn-danger'\r\n                    onClick={() => {\r\n                      setPriv(false);\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </div>\r\n                )}\r\n                {priv && (\r\n                  <div className=' mt-4'>\r\n                    <Alert />\r\n                    <label htmlFor='password'>Password</label>\r\n                    <div className='form-inline mb-4'>\r\n                      <div className='input-group w-100 '>\r\n                        <input\r\n                          type={hidden ? 'password' : 'text'}\r\n                          className='form-control '\r\n                          id='password'\r\n                          placeholder='Enter a password...'\r\n                          value={password}\r\n                          onChange={(e) => setPassword(e.target.value)}\r\n                        />{' '}\r\n                        <div className='input-group-prepend'>\r\n                          <span\r\n                            className='input-group-text border-left-0 cursor-pointer rounded-right'\r\n                            id='inputGroupFileAddon01'\r\n                            onClick={() => setHidden(!hidden)}\r\n                          >\r\n                            {!hidden ? (\r\n                              <i className='far fa-eye-slash'></i>\r\n                            ) : (\r\n                              <i className='far fa-eye'></i>\r\n                            )}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <label htmlFor='confirmpassword'>Confirm Password</label>\r\n                    <div className='form-inline mb-4'>\r\n                      <div className='input-group w-100 '>\r\n                        <input\r\n                          type={hidden2 ? 'password' : 'text'}\r\n                          className='form-control '\r\n                          id='password2'\r\n                          placeholder='Enter a password...'\r\n                          value={password2}\r\n                          onChange={(e) => setPassword2(e.target.value)}\r\n                        />{' '}\r\n                        <div className='input-group-prepend'>\r\n                          <span\r\n                            className='input-group-text border-left-0 cursor-pointer rounded-right'\r\n                            id='inputGroupFileAddon01'\r\n                            onClick={() => setHidden2(!hidden2)}\r\n                          >\r\n                            {!hidden2 ? (\r\n                              <i className='far fa-eye-slash'></i>\r\n                            ) : (\r\n                              <i className='far fa-eye'></i>\r\n                            )}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className='d-flex justify-content-end'>\r\n                      <div\r\n                        className='ml-auto bg-teal text-white btn teal-hover'\r\n                        onClick={() => {\r\n                          if (password === password2) {\r\n                            editPassword(room._id, { password }).then(() =>\r\n                              setPriv(false),\r\n                            );\r\n                          } else {\r\n                            setAlert(\"Passwords Don't Match\", 'danger');\r\n                          }\r\n                        }}\r\n                      >\r\n                        Add Password\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <div className={`teal text-left mx-4 my-4  `}>\r\n                <div\r\n                  className='ml-auto bg-teal text-white btn teal-hover'\r\n                  onClick={() => {\r\n                    editPassword(room._id, { password: undefined });\r\n                  }}\r\n                >\r\n                  Make Public\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n        {admin && !room.public && (\r\n          <div className={`teal text-left mx-4 my-4  `}>\r\n            {!priv ? (\r\n              <div\r\n                className='ml-auto bg-teal text-white btn teal-hover'\r\n                onClick={() => setPriv(true)}\r\n              >\r\n                Change Password\r\n              </div>\r\n            ) : (\r\n              <div\r\n                className='ml-auto  text-white btn btn-danger'\r\n                onClick={() => {\r\n                  setPriv(false);\r\n                }}\r\n              >\r\n                Cancel\r\n              </div>\r\n            )}\r\n            {priv && (\r\n              <div className=' mt-4'>\r\n                <Alert />\r\n                <label htmlFor='password'>Old Password</label>\r\n                <div className='form-inline mb-4'>\r\n                  <div className='input-group w-100 '>\r\n                    <input\r\n                      type={hidden ? 'password' : 'text'}\r\n                      className='form-control '\r\n                      id='password'\r\n                      placeholder='Enter a password...'\r\n                      value={password}\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                    />{' '}\r\n                    <div className='input-group-prepend'>\r\n                      <span\r\n                        className='input-group-text border-left-0 cursor-pointer rounded-right'\r\n                        id='inputGroupFileAddon01'\r\n                        onClick={() => setHidden(!hidden)}\r\n                      >\r\n                        {!hidden ? (\r\n                          <i className='far fa-eye-slash'></i>\r\n                        ) : (\r\n                          <i className='far fa-eye'></i>\r\n                        )}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <label htmlFor='confirmpassword'>New Password</label>\r\n                <div className='form-inline mb-4'>\r\n                  <div className='input-group w-100 '>\r\n                    <input\r\n                      type={hidden2 ? 'password' : 'text'}\r\n                      className='form-control '\r\n                      id='password2'\r\n                      placeholder='Enter a password...'\r\n                      value={password2}\r\n                      onChange={(e) => setPassword2(e.target.value)}\r\n                    />{' '}\r\n                    <div className='input-group-prepend'>\r\n                      <span\r\n                        className='input-group-text border-left-0 cursor-pointer rounded-right'\r\n                        id='inputGroupFileAddon01'\r\n                        onClick={() => setHidden2(!hidden2)}\r\n                      >\r\n                        {!hidden2 ? (\r\n                          <i className='far fa-eye-slash'></i>\r\n                        ) : (\r\n                          <i className='far fa-eye'></i>\r\n                        )}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='d-flex justify-content-end'>\r\n                  <div\r\n                    className='ml-auto bg-teal text-white btn teal-hover'\r\n                    onClick={() => {\r\n                      editPassword(room._id, {\r\n                        password: password2,\r\n                        currentPassword: password,\r\n                      }).then(() => {\r\n                        setPriv(false);\r\n                        setPassword('');\r\n                        setPassword2('');\r\n                      });\r\n                    }}\r\n                  >\r\n                    Update Password\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        <div className='teal text-left mx-4 my-3 '>\r\n          <div>Members</div>\r\n          <div className=' mt-2 rounded'>\r\n            {room.members.map((member, id) => (\r\n              <div key={id}>\r\n                <ContextMenuTrigger\r\n                  id={'same_unique_identifier' + member._id}\r\n                  holdToDisplay={500}\r\n                >\r\n                  <div className='d-flex align-items-center justify-content-between py-2  sidebar-room border-bottom px-2 border-secondary position-relative'>\r\n                    <div className='d-flex align-items-center '>\r\n                      <img\r\n                        className='rounded-circle'\r\n                        src={`https://res.cloudinary.com/tweetco/image/upload/w_40/${member.avatar}`}\r\n                        alt=''\r\n                        width='40'\r\n                        height='40'\r\n                      />\r\n                      <div className='mx-3 text-white'>{member.username}</div>\r\n                    </div>\r\n                    <div className='d-flex flex-column justify-content-center'>\r\n                      {room.admin.filter((item) => item.user === member.user)\r\n                        .length > 0 && (\r\n                        <span\r\n                          class={`badge badge-success bg-teal ${\r\n                            member.user === user.id ? 'mb-1' : ''\r\n                          }`}\r\n                        >\r\n                          Admin\r\n                        </span>\r\n                      )}\r\n                      {member.user === user.id && (\r\n                        <span class='badge badge-success bg-teal'>you</span>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </ContextMenuTrigger>\r\n                {admin && member.user !== user.id && (\r\n                  <ContextMenu\r\n                    id={'same_unique_identifier' + member._id}\r\n                    className='card react-contextmenu  bg-main border-0 shadow py-2'\r\n                  >\r\n                    <MenuItem\r\n                      onClick={() => {\r\n                        kickMember(room._id, member.user);\r\n                      }}\r\n                      className='react-contextmenu-item d-flex align-items-center justify-content-start text-white rounded-0 text-left'\r\n                    >\r\n                      <div>Kick User</div>\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      onClick={() => {\r\n                        if (\r\n                          room.admin.filter((item) => item.user === member.user)\r\n                            .length > 0\r\n                        ) {\r\n                          removeAdmin(room._id, member.user);\r\n                        } else {\r\n                          makeAdmin(room._id, member.user);\r\n                        }\r\n                      }}\r\n                      className='react-contextmenu-item d-flex align-items-center justify-content-start text-white rounded-0 text-left'\r\n                    >\r\n                      {room.admin.filter((item) => item.user === member.user)\r\n                        .length > 0 ? (\r\n                        <div>Remove Admin</div>\r\n                      ) : (\r\n                        <div>Make An Admin</div>\r\n                      )}\r\n                    </MenuItem>\r\n                  </ContextMenu>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nRoomProfile.propTypes = {\r\n  open: PropTypes.bool,\r\n  setProfileOpen: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  kickMember: PropTypes.func.isRequired,\r\n  makeAdmin: PropTypes.func.isRequired,\r\n  removeAdmin: PropTypes.func.isRequired,\r\n  updateRoomInfo: PropTypes.func.isRequired,\r\n  editPassword: PropTypes.func.isRequired,\r\n  setAlert: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, {\r\n  kickMember,\r\n  makeAdmin,\r\n  removeAdmin,\r\n  updateRoomInfo,\r\n  editPassword,\r\n  setAlert,\r\n})(RoomProfile);\r\n",{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","severity":1,"message":"200","line":1,"column":17,"nodeType":"201","messageId":"202","endLine":1,"endColumn":25},{"ruleId":"199","severity":1,"message":"203","line":1,"column":48,"nodeType":"201","messageId":"202","endLine":1,"endColumn":54},{"ruleId":"199","severity":1,"message":"204","line":2,"column":8,"nodeType":"201","messageId":"202","endLine":2,"endColumn":10},{"ruleId":"199","severity":1,"message":"205","line":2,"column":14,"nodeType":"201","messageId":"202","endLine":2,"endColumn":20},{"ruleId":"199","severity":1,"message":"206","line":19,"column":10,"nodeType":"201","messageId":"202","endLine":19,"endColumn":24},{"ruleId":"207","severity":1,"message":"208","line":24,"column":6,"nodeType":"209","endLine":24,"endColumn":12,"suggestions":"210"},{"ruleId":"207","severity":1,"message":"211","line":39,"column":6,"nodeType":"209","endLine":39,"endColumn":14,"suggestions":"212"},{"ruleId":"207","severity":1,"message":"213","line":11,"column":6,"nodeType":"209","endLine":11,"endColumn":24,"suggestions":"214"},{"ruleId":"207","severity":1,"message":"215","line":21,"column":6,"nodeType":"209","endLine":21,"endColumn":32,"suggestions":"216"},{"ruleId":"195","replacedBy":"217"},{"ruleId":"197","replacedBy":"218"},{"ruleId":"199","severity":1,"message":"219","line":18,"column":10,"nodeType":"201","messageId":"202","endLine":18,"endColumn":14},{"ruleId":"199","severity":1,"message":"220","line":18,"column":16,"nodeType":"201","messageId":"202","endLine":18,"endColumn":23},{"ruleId":"199","severity":1,"message":"221","line":1,"column":27,"nodeType":"201","messageId":"202","endLine":1,"endColumn":36},{"ruleId":"199","severity":1,"message":"222","line":39,"column":17,"nodeType":"201","messageId":"202","endLine":39,"endColumn":25},"no-native-reassign",["223"],"no-negated-in-lhs",["224"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'io' is defined but never used.","'Socket' is defined but never used.","'arrivalMessage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.","ArrayExpression",["225"],"React Hook useEffect has missing dependencies: 'setLastMessage' and 'user.id'. Either include them or remove the dependency array. If 'setLastMessage' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["226"],"React Hook useEffect has a missing dependency: 'search'. Either include it or remove the dependency array.",["227"],"React Hook useEffect has missing dependencies: 'search' and 'user.username'. Either include them or remove the dependency array.",["228"],["223"],["224"],"'edit' is assigned a value but never used.","'setEdit' is assigned a value but never used.","'useEffect' is defined but never used.","'setAdmin' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},"Update the dependencies array to be: [room, socket]",{"range":"237","text":"238"},"Update the dependencies array to be: [setLastMessage, socket, user.id]",{"range":"239","text":"240"},"Update the dependencies array to be: [rooms, search, setSearch]",{"range":"241","text":"242"},"Update the dependencies array to be: [rooms, search, setSearch, socket, user.username]",{"range":"243","text":"244"},[705,711],"[room, socket]",[1113,1121],"[setLastMessage, socket, user.id]",[276,294],"[rooms, search, setSearch]",[568,594],"[rooms, search, setSearch, socket, user.username]"]